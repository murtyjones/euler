#include <iostream>
//#include <bits/stdc++.h>
using namespace std;

int power(int x, unsigned int y, int p)
{
    int res = 1;      // Initialize result
    x = x % p;  // Update x if it is more than or
                // equal to p
    while (y > 0)
    {
        // If y is odd, multiply x with result
        if (y & 1)
            res = (res*x) % p;

        // y must be even now
        y = y>>1; // y = y/2
        x = (x*x) % p;
    }
    return res;
}

bool isProbablyPrime(long int n, int d)
{
  const int timesToRepeat = 10;
  for(int i = 0; i < timesToRepeat; i++) {
    int a = 2 + rand() % (n - 4);

    int x = power(a, d, n);

    if (x == 1 || x == n - 1) {
      continue;
    }

    while (d != n-1)
    {
      x = (x * x) % n;
      d *= 2;

      if (x == 1)   return false;
      if (x == n-1) return true;
    }

    return false;
  }

  return true;
}

int main()
{
  long hugeNumber = 600851475143;


  long int last = 0;

  for(long int i = hugeNumber / 10 - 1; i > 0; i = i - 2) {
    if((hugeNumber / i) % 2 != 0) {
      // i not a factor of 600851475143
      continue;
    }

    if(isProbablyPrime(i, 1)) {
      cout << "yay!" << '\n';
      break;
    }
    cout << i << '\n';
  }

  cout << "hi" << '\n';
  return 0;
}
